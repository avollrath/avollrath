---
import NavBar from '../components/NavBar.astro';
import Footer from '../components/Footer.astro';
import { ViewTransitions } from 'astro:transitions';

const { title, description } = Astro.props;

---

<!doctype html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/src/styles/main.css" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <ViewTransitions />
  </head>
  <body class="dark:bg-dark-bg dark:text-white text-dark-text bg-gray-200 font-body">
    <div class="grain"></div>
    <div class="container mx-auto px-4 py-8 w-full max-w-1920 flex flex-col min-h-screen">
      <NavBar />

      <!-- Main content area with 12-column grid layout -->
      <main class="flex-grow">
        <div class="grid grid-cols-1 md:grid-cols-12 gap-8">
          <slot /> <!-- Slot for page-specific content -->
        </div>
      </main>

      <Footer />
    </div>
    <script type="module">
      // Function to update theme
      const updateTheme = () => {
    const theme = localStorage.getItem('theme') || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
    document.documentElement.classList.toggle('dark', theme === 'dark');
    document.dispatchEvent(new CustomEvent('theme-change'));
    // Update checkbox state based on the theme
    document.getElementById('checkbox').checked = theme === 'dark';
  };

  // Function to handle checkbox change
  const handleCheckboxChange = () => {
    const checkbox = document.getElementById('checkbox');
    const isDark = checkbox.checked;
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
    updateTheme();
  };

  // Initialize theme and attach listeners
  const init = () => {
    updateTheme();
    const checkbox = document.getElementById('checkbox');
    checkbox.addEventListener('change', handleCheckboxChange);
  };

  // Check if document is already loaded
  if (document.readyState === 'loading') {  
    document.addEventListener('DOMContentLoaded', init);
  } else {
    init();
  }

      document.addEventListener('astro:after-swap', () => {
  // Reinitialize theme and other functionalities
  init();

  // Dynamically import and reinitialize tooltips
  import('/src/scripts/initializeTooltips.js').then((module) => {
    module.default(); // Reinitialize tooltips
  });
});
    </script>
    <script type="module" src="/src/scripts/initializeTooltips.js"></script>
    <script type="module" src="/src/scripts/interactiveSections.js"></script>
  </body>

</html>
